{"ast":null,"code":"var _jsxFileName = \"/home/henok/Fullstack/client/src/Routers/AppRouter.js\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport WrappedRegister from \"../components/Register/WrappedRegister\";\nimport WrappedSignIn from \"../components/SignIn/WrappedSignIn\";\nimport Home from \"../containers/Home\";\nimport MyAuthProvider from \"../contexts/MyAuthProvider\";\nimport jwt from \"jsonwebtoken\";\n\nconst checkAuth = () => {\n  const token = localStorage.getItem(\"token\");\n\n  if (!token) {\n    return false;\n  }\n\n  try {\n    const {\n      exp\n    } = jwt.decode(token);\n\n    if (exp < new Date().getTime() / 1000) {\n      return false;\n    }\n  } catch (err) {\n    return false;\n  }\n\n  return true;\n};\n\nconst AuthRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => checkAuth() ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/signin\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 2\n    }\n  }));\n};\n\nconst AppRouter = () => /*#__PURE__*/React.createElement(MyAuthProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 2\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(AuthRoute, {\n  path: \"/\",\n  component: Home,\n  exact: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 6\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  exaxt: true,\n  path: \"/register\",\n  component: WrappedRegister,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 6\n  }\n}), /*#__PURE__*/React.createElement(Route, {\n  exact: true,\n  path: \"/signin\",\n  component: WrappedSignIn,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 6\n  }\n})))));\n\nexport default AppRouter;","map":{"version":3,"sources":["/home/henok/Fullstack/client/src/Routers/AppRouter.js"],"names":["React","BrowserRouter","Route","Switch","Redirect","WrappedRegister","WrappedSignIn","Home","MyAuthProvider","jwt","checkAuth","token","localStorage","getItem","exp","decode","Date","getTime","err","AuthRoute","component","Component","rest","props","pathname","AppRouter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACvB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,MAAI,CAACF,KAAL,EAAY;AACX,WAAO,KAAP;AACA;;AAED,MAAI;AACH,UAAM;AAAEG,MAAAA;AAAF,QAAUL,GAAG,CAACM,MAAJ,CAAWJ,KAAX,CAAhB;;AAEA,QAAIG,GAAG,GAAG,IAAIE,IAAJ,GAAWC,OAAX,KAAuB,IAAjC,EAAuC;AACtC,aAAO,KAAP;AACA;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACb,WAAO,KAAP;AACA;;AAED,SAAO,IAAP;AACA,CAlBD;;AAoBA,MAAMC,SAAS,GAAG;AAAA,MAAC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAD;AAAA,sBACjB,oBAAC,KAAD,oBACKA,IADL;AAEC,IAAA,MAAM,EAAEC,KAAK,IACZb,SAAS,kBACR,oBAAC,SAAD,oBAAea,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADQ,gBAGR,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADiB;AAAA,CAAlB;;AAaA,MAAMC,SAAS,GAAG,mBACjB,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,SAAD;AAAW,EAAA,IAAI,EAAC,GAAhB;AAAoB,EAAA,SAAS,EAAElB,IAA/B;AAAqC,EAAA,KAAK,EAAE,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,eAEC,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,WAAlB;AAA8B,EAAA,SAAS,EAAEF,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFD,eAGC,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,SAAlB;AAA4B,EAAA,SAAS,EAAEC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHD,CADD,CADD,CADD,CADD;;AAcA,eAAemB,SAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport WrappedRegister from \"../components/Register/WrappedRegister\";\nimport WrappedSignIn from \"../components/SignIn/WrappedSignIn\";\nimport Home from \"../containers/Home\";\nimport MyAuthProvider from \"../contexts/MyAuthProvider\";\nimport jwt from \"jsonwebtoken\";\n\nconst checkAuth = () => {\n\tconst token = localStorage.getItem(\"token\");\n\n\tif (!token) {\n\t\treturn false;\n\t}\n\n\ttry {\n\t\tconst { exp } = jwt.decode(token);\n\n\t\tif (exp < new Date().getTime() / 1000) {\n\t\t\treturn false;\n\t\t}\n\t} catch (err) {\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nconst AuthRoute = ({ component: Component, ...rest }) => (\n\t<Route\n\t\t{...rest}\n\t\trender={props =>\n\t\t\tcheckAuth() ? (\n\t\t\t\t<Component {...props} />\n\t\t\t) : (\n\t\t\t\t<Redirect to={{ pathname: \"/signin\" }} />\n\t\t\t)\n\t\t}\n\t/>\n);\n\nconst AppRouter = () => (\n\t<MyAuthProvider>\n\t\t<BrowserRouter>\n\t\t\t<div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<AuthRoute path=\"/\" component={Home} exact={true} />\n\t\t\t\t\t<Route exaxt path=\"/register\" component={WrappedRegister} />\n\t\t\t\t\t<Route exact path=\"/signin\" component={WrappedSignIn} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t</MyAuthProvider>\n);\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}