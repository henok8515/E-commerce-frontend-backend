{"ast":null,"code":"var _jsxFileName = \"/home/henok/Fullstack/client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport { Grid, Typography } from '@material-ui/core';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodos = todo => {\n    setTodos([...todos, todo]);\n  };\n\n  const removeTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const todoComplete = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo,\n          completed: !todo.completed\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  useEffect(() => {\n    const data = localStorage.setItem('todo-data');\n  });\n  useEffect(() => {\n    localStorage.getItem('todo-data', JSON.stringify(todos));\n  }, [todos]);\n  console.log(todos);\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textAlign: 'center',\n      fontSize: '40px'\n    },\n    varient: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TodoForm, {\n    addTodos: addTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todoComplete: todoComplete,\n    removeTodo: removeTodo,\n    todos: todos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/henok/Fullstack/client/src/App.js"],"names":["React","useState","useEffect","TodoForm","TodoList","Grid","Typography","App","todos","setTodos","addTodos","todo","removeTodo","id","filter","todoComplete","map","completed","data","localStorage","setItem","getItem","JSON","stringify","console","log","textAlign","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;;AACA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,QAAQ,GAAIC,IAAD,IAAU;AACvBF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWG,IAAX,CAAD,CAAR;AACH,GAFD;;AAGA,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AACvBJ,IAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAcH,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACH,GAFD;;AAGA,QAAME,YAAY,GAAIF,EAAD,IAAQ;AACzBJ,IAAAA,QAAQ,CACJD,KAAK,CAACQ,GAAN,CAAWL,IAAD,IAAU;AAChB,UAAIA,IAAI,CAACE,EAAL,KAAYA,EAAhB,EAAoB;AAChB,eAAO,EAAE,GAAGF,IAAL;AAAWM,UAAAA,SAAS,EAAE,CAACN,IAAI,CAACM;AAA5B,SAAP;AACH;;AACD,aAAON,IAAP;AACH,KALD,CADI,CAAR;AAQH,GATD;;AAUAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAb;AACH,GAFQ,CAAT;AAGAlB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,YAAY,CAACE,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAef,KAAf,CAAlC;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAGAgB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAE;AAAEkB,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,QAAQ,EAAE;AAAjC,KADX;AAEI,IAAA,OAAO,EAAC,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEjB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMI,oBAAC,QAAD;AACI,IAAA,YAAY,EAAEK,YADlB;AAEI,IAAA,UAAU,EAAEH,UAFhB;AAGI,IAAA,KAAK,EAAEJ,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAcH;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TodoForm from './components/TodoForm'\nimport TodoList from './components/TodoList'\nimport { Grid, Typography } from '@material-ui/core'\nfunction App() {\n    const [todos, setTodos] = useState([])\n\n    const addTodos = (todo) => {\n        setTodos([...todos, todo])\n    }\n    const removeTodo = (id) => {\n        setTodos(todos.filter((todo) => todo.id !== id))\n    }\n    const todoComplete = (id) => {\n        setTodos(\n            todos.map((todo) => {\n                if (todo.id === id) {\n                    return { ...todo, completed: !todo.completed }\n                }\n                return todo\n            })\n        )\n    }\n    useEffect(() => {\n        const data = localStorage.setItem('todo-data')\n    })\n    useEffect(() => {\n        localStorage.getItem('todo-data', JSON.stringify(todos))\n    }, [todos])\n    console.log(todos)\n    return (\n        <Grid>\n            <Typography\n                style={{ textAlign: 'center', fontSize: '40px' }}\n                varient=\"h4\"\n            ></Typography>\n            <TodoForm addTodos={addTodos} />\n            <TodoList\n                todoComplete={todoComplete}\n                removeTodo={removeTodo}\n                todos={todos}\n            />\n        </Grid>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}